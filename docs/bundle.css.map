{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.html",
    "Card.html"
  ],
  "sourcesContent": [
    "<div class=\"parent-flex\">\r\n\t<div class=\"all-cards\">\r\n\t\t{#each cards as card, index}\r\n\t\t\t\r\n\t\t\t{#if (index + 1)%4 === 0}\r\n\t\t\t\t<Card bind:card on:seleccionado=\"toggleEstado(event, index, card.nombre)\"/>\r\n\t\t\t\t<br>\r\n\t\t\t{:else}\r\n\t\t\t\t<Card bind:card on:seleccionado=\"toggleEstado(event, index, card.nombre)\"/>\r\n\t\t\t{/if}\r\n\t\t{:else}\r\n\t\t\tNo hay Cartas!\r\n\t\t{/each}\r\n\t</div>\r\n\r\n\t<h1>Aciertos: { aciertos }</h1>\r\n\r\n</div>\r\n\r\n\r\n<style>\r\n\t.parent-flex{\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t}\r\n\th1{\r\n\t\t    display: flex;\r\n    align-items: center;\r\n\t}\r\n\r\n\t\r\n</style>\r\n\r\n<script>\r\n\r\n\timport Card from '../public/Card.html';\r\n\r\n\texport default {\r\n\t\tcomponents:{\r\n\t\t\tCard\r\n\t\t},\r\n\t\tcomputed:{\r\n\t\t\tcounter: ({ cards }) => { \r\n\t\t\t\treturn cards.filter(card => card.estado).length\r\n\t\t\t},\r\n\t\t\tselected: ({ cards }) => { \r\n\t\t\t\treturn cards.filter(card => card.estado === true)\r\n\t\t\t},\r\n\t\t},\r\n\t\tdata(){\r\n\t\t\treturn {\r\n\t\t\t\tcards: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Dog',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Cat',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Cat',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Dog',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Dolphin',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Dolphin',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Whale',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Whale',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Tiger',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Tiger',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Bird',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Bird',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Horse',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Horse',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Bear',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnombre: 'Bear',\r\n\t\t\t\t\t\testado: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\t\t],\r\n\t\t\t\tactual: '',\r\n\t\t\t\taciertos: 0,\r\n\t\t\t}\r\n\t\t},\r\n\t\toncreate(){\r\n\t\t\tlet { cards } = this.get();\r\n\t\t\tlet newReorderCards = this.shuffle(cards);\r\n\t\t\tthis.set({\r\n\t\t\t\tcards: newReorderCards\r\n\t\t\t});\r\n\t\t\t// console.log('Shuffled Cards ',newReorderCards);\r\n\t\t},\r\n\t\tonstate({changed, current, previous}){\r\n\t\t\t\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\ttoggleEstado(event, index, current){\r\n\t\t\t\tconst { cards } = this.get();\r\n\r\n\t\t\t\tcards[ index ].estado = !event.estado;\r\n\r\n\t\t\t\tthis.set({\r\n\t\t\t\t\tcards,\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tconst { counter, actual, aciertos } = this.get();\r\n\t\t\t\t\r\n\t\t\t\tif (!actual) {\r\n\t\t\t\t\tthis.set({\r\n\t\t\t\t\t\tactual: current\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// console.log(`Set Actual ${actual} to Current ${current}`);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// console.log(`If Actual ${actual} === ${current}`);\r\n\t\t\t\t\tif (actual === current) {\r\n\t\t\t\t\t\tconst newCards = cards.map(card =>{\r\n\t\t\t\t\t\t\tif (card.nombre === current) {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...card,\r\n\t\t\t\t\t\t\t\t\testado: 'INAMOVIBLE'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...card\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\tthis.set({\r\n\t\t\t\t\t\t\tcards: newCards,\r\n\t\t\t\t\t\t\tactual:'',\r\n\t\t\t\t\t\t\taciertos: aciertos + 1\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// console.log('Setting cards to inamovible state: ', this.get().cards);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst newCards = cards.map(card =>{\r\n\t\t\t\t\t\t\tif (card.estado === true) {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...card,\r\n\t\t\t\t\t\t\t\t\testado: false\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...card\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// console.log(newCards);\r\n\r\n\t\t\t\t\t\t//Wrong Choose: Cover All Cards after 2 seconds\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.set({\r\n\t\t\t\t\t\t\t\tcards: newCards,\r\n\t\t\t\t\t\t\t\tactual:''\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tshuffle(cards) {\r\n\t\t\t\tconst arrayRevuelto = [\r\n\t\t\t\t\t...cards.sort(() => Math.random() - 0.5)\r\n\t\t\t\t];\r\n\t\t\t\t// console.log(arrayRevuelto);\r\n\t\t\t\treturn arrayRevuelto;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\thelpers: {\r\n\t\t},\r\n\r\n\t}\r\n</script>\r\n\r\n\r\n",
    "{#if estado === true}\r\n    <div class=\"card card-width inline-flex pointer\" on:click=\"fire('seleccionado', { estado })\">\r\n        <img class=\"card-img-top\" src=\"https://loremflickr.com/300/300/{card.nombre}\" alt=\"Card image cap\">\r\n        <!-- <div class=\"card-body\">\r\n            <p class=\"card-text\">{ card.nombre }</p>\r\n        </div> -->\r\n    </div>\r\n{:elseif estado === 'INAMOVIBLE'} \r\n    <div class=\"card card-width inline-flex no-drop blackwhite\" >\r\n        <img class=\"card-img-top\" src=\"https://loremflickr.com/300/300/{card.nombre}\" alt=\"Card image cap\">\r\n        <!-- <div class=\"card-body\">\r\n            <p class=\"card-text\">INAMOVIBLE</p>\r\n        </div> -->\r\n    </div>\r\n{:else}\r\n    <div class=\"card card-width inline-flex pointer\" on:click=\"fire('seleccionado', { estado })\">\r\n        <img class=\"card-img-top\" src=\"https://loremflickr.com/300/300/orange\" alt=\"Card image cap\">\r\n    </div>\r\n{/if}\r\n\r\n\r\n<style>\r\n    .blackwhite{\r\n        -webkit-filter: grayscale(100%); /* Safari 6.0 - 9.0 */\r\n        filter: grayscale(100%);\r\n    }\r\n\r\n    .pointer{\r\n        cursor: pointer;\r\n    }\r\n    .no-drop{\r\n        cursor: no-drop;\r\n    }\r\n\r\n    .inline-flex{\r\n        display: inline-flex;\r\n        margin: 10px;\r\n    }\r\n\r\n    .card-width{\r\n        width: 8rem;\r\n    }\r\n</style>\r\n<script>\r\n\r\n    export default {\r\n        components:{\r\n            \r\n        },\r\n        computed:{\r\n            estado: ({ card }) => card.estado\r\n        },\r\n        data(){\r\n            return {\r\n                card: {\r\n                    nombre: '',\r\n                    estado:''\r\n                }\r\n            }\r\n        },\r\n        oncreate(){\r\n        \r\n            \r\n        },\r\n        methods: {\r\n            \r\n        }\r\n    }\r\n</script>"
  ],
  "names": [],
  "mappings": "AAqBC,2BAAY,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,AACxB,CAAC,AACD,iBAAE,CAAC,AACE,OAAO,CAAE,IAAI,CACf,WAAW,CAAE,MAAM,AACtB,CAAC;ACNE,0BAAW,CAAC,AACR,cAAc,CAAE,UAAU,IAAI,CAAC,CAC/B,MAAM,CAAE,UAAU,IAAI,CAAC,AAC3B,CAAC,AAED,uBAAQ,CAAC,AACL,MAAM,CAAE,OAAO,AACnB,CAAC,AACD,uBAAQ,CAAC,AACL,MAAM,CAAE,OAAO,AACnB,CAAC,AAED,2BAAY,CAAC,AACT,OAAO,CAAE,WAAW,CACpB,MAAM,CAAE,IAAI,AAChB,CAAC,AAED,0BAAW,CAAC,AACR,KAAK,CAAE,IAAI,AACf,CAAC"
}